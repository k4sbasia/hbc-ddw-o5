SET echo on
SET feedback on
SET linesize 10000
SET pagesize 0
SET sqlprompt ''
SET heading OFF
SET trimspool ON
set timing on
--***********************************************************
--***********************************************************
truncate table &1.USER_ACCOUT_WRK;
truncate table  &1.USER_ADDRESS_WRK;
truncate table &1.OBJECT_ATTR_CUST_WRK;
INSERT INTO &1.USER_ACCOUT_WRK
select * from martini_store.user_account@&2 t
where usa_uid is not null and t.USA_SYS_TIMESTAMP > trunc(sysdate-2);
commit;
INSERT INTO &1.USER_ADDRESS_WRK
select * from martini_store.address@&2 uad where uad_status_cd='ENB'
and exists (select 'x' from martini_store.user_account@&2 where usa_uid is not null and usa_id=uad_usa_id)
and uad.uad_sys_timestamp > trunc(sysdate-2);
commit;

declare


   I           INTEGER := 0;
   l_error_count  NUMBER;
  l_error_msg varchar2(2000);
  ex_dml_errors EXCEPTION;
  PRAGMA EXCEPTION_INIT(ex_dml_errors, -24381);
  LASTPROCESEDDATE DATE := SYSDATE;
  CURSOR C1 IS
SElect tua.usa_id,tua.USA_UID,tua.USA_CUST_NBR,tua.USA_LAST_LOGIN_DT,tua.USA_FIRST_NM,tua.USA_MIDDLE_NM,tua.USA_LAST_NM, obg.gndr,obdt.brth_dt,obrw.rwrd,tua.USA_EMPLOYEE_NBR,'Y' REG_CUSTOMER,4 banner_id,tuad.UAD_ADDR1,tuad.UAD_ADDR2,tuad.UAD_ADDR3,tuad.UAD_CITY,tuad.UAD_STATE_CD,tuad.UAD_PCODE,tuad.UAD_COUNTRY_CD
,NVL(tua.USA_CELL_PH,NVL(tua.USA_HOME_PH,tua.USA_BUS_PH)) PHONE_NUMBER ,tua.USA_SYS_TIMESTAMP, tua.USA_OPT_OUT
, tuad.UAD_CTC_FIRST_NM USA_PRFRD_ADDR_FIRST_NAME,tuad.UAD_CTC_LAST_NM USA_PRFRD_ADDR_LAST_NAME--, 'Y' USA_PRFRD_ADDR_DEFAULT_TYPE
, tuad.UAD_CTC_MIDDLE_NM USA_PRFRD_ADDR_MIDDLE_NAME,tuad.UAD_CTC_PH USA_PRFRD_ADDR_PHONE_NO
--,'B' USA_ADD_PRIOR_TYPE_CD
,tuad.UAD_STATUS_CD
--CASE WHEN tuad.UAD_STATUS_CD ='ENB' THEN 'A' ELSE NULL END USA_PRFRD_ADDR_ACTIVEIND
from &1.USER_ACCOUT_WRK tua
INNER JOIN &1.USER_ADDRESS_WRK tuad  ON tua.USA_BILL_TO_UAD_ID= tuad.uad_id
LEFT JOIN (select oba_atr_id,oba_obj_id,oba_str_val gndr from  &1.object_attr_cust_wrk obg ) obg
            ON obg.oba_obj_id=tua.usa_id
            AND  obg.oba_atr_id=6193548999262233
LEFT JOIN (select oba_atr_id,oba_obj_id,oba_dt_val brth_dt from  &1.object_attr_cust_wrk obg ) obdt
            ON obdt.oba_obj_id=tua.usa_id
            AND obdt.oba_atr_id=6193548999262291
LEFT JOIN (select oba_atr_id,oba_obj_id,oba_str_val rwrd from  &1.object_attr_cust_wrk obg ) obrw
            ON obrw.oba_obj_id=tua.usa_id
            AND  obrw.oba_atr_id=6193548999262640
where tua.usa_uid is not null
--and rownum<10
;
  TYPE CUST_REC_TYPE IS
        TABLE OF C1%rowtype;
         v_coll_CUST_REC_TYPE   CUST_REC_TYPE;
 BEGIN
    OPEN c1;
    LOOP
    FETCH c1  BULK COLLECT INTO v_coll_CUST_REC_TYPE limit 50000;
    BEGIN
     FORALL indx IN 1..v_coll_CUST_REC_TYPE.COUNT SAVE EXCEPTIONS
  MERGE INTO &1.USER_ACCOUNT UA
  USING (
     SELECT v_coll_CUST_REC_TYPE(indx).usa_id CUSTOMER_ID, 'BM' SOURCE_CD, v_coll_CUST_REC_TYPE(indx).USA_EMPLOYEE_NBR EMPLOYEENBR,  'WEB' CUSTOMERTYPE
     , v_coll_CUST_REC_TYPE(indx).USA_LAST_LOGIN_DT RECENCY_DATE_TIME, NULL PREFIX,
     v_coll_CUST_REC_TYPE(indx).USA_OPT_OUT EMAIL_OPT_IND,
        v_coll_CUST_REC_TYPE(indx).USA_FIRST_NM FIRSTNAME,v_coll_CUST_REC_TYPE(indx).USA_MIDDLE_NM MIDDLENAME,
        v_coll_CUST_REC_TYPE(indx).USA_LAST_NM LASTNAME,upper(v_coll_CUST_REC_TYPE(indx).USA_UID) EMAIL_ADDRESS,
       v_coll_CUST_REC_TYPE(indx).gndr GENDER,v_coll_CUST_REC_TYPE(indx).brth_dt DOB,
       v_coll_CUST_REC_TYPE(indx).PHONE_NUMBER PHONE_NUMBER,NULL PREFERRRED_LANGUAGE,v_coll_CUST_REC_TYPE(indx).REG_CUSTOMER REGISTERED_CUSTOMER,v_coll_CUST_REC_TYPE(indx).rwrd LOYALITY_NUMBER,v_coll_CUST_REC_TYPE(indx).banner_id BANNER_ID--ADDR1,ADDR2,ADDR3,CITY,STATE,ZIPCODE,
      , NULL CREATE_DT,v_coll_CUST_REC_TYPE(indx).USA_SYS_TIMESTAMP MODIFY_DT,
      v_coll_CUST_REC_TYPE(indx).UAD_ADDR1 USA_PRFRD_ADDR1,
      v_coll_CUST_REC_TYPE(indx).UAD_ADDR2  USA_PRFRD_ADDR2,
    v_coll_CUST_REC_TYPE(indx).UAD_ADDR3  USA_PRFRD_ADDR3,
    v_coll_CUST_REC_TYPE(indx).UAD_CITY USA_PRFRD_CITY,
    v_coll_CUST_REC_TYPE(indx).UAD_STATE_CD USA_PRFRD_STATE,
    v_coll_CUST_REC_TYPE(indx).UAD_COUNTRY_CD USA_PRFRD_COUNTRY,
    v_coll_CUST_REC_TYPE(indx).UAD_PCODE USA_PRFRD_ZIPCODE,
    NULL USA_PRFRD_ZIP4,
    'Y' MIGRATED_REC
    ,
      v_coll_CUST_REC_TYPE(indx).USA_PRFRD_ADDR_FIRST_NAME USA_PRFRD_ADDR_FIRST_NAME,
        v_coll_CUST_REC_TYPE(indx).USA_PRFRD_ADDR_LAST_NAME USA_PRFRD_ADDR_LAST_NAME,
          'Y' USA_PRFRD_ADDR_DEFAULT_TYPE,
          v_coll_CUST_REC_TYPE(indx).USA_PRFRD_ADDR_MIDDLE_NAME USA_PRFRD_ADDR_MIDDLE_NAME,
     v_coll_CUST_REC_TYPE(indx).USA_PRFRD_ADDR_PHONE_NO USA_PRFRD_ADDR_PHONE_NO,
       'B' USA_ADD_PRIOR_TYPE_CD,
        CASE WHEN v_coll_CUST_REC_TYPE(indx).UAD_STATUS_CD ='ENB' THEN 'A' ELSE NULL END USA_PRFRD_ADDR_ACTIVEIND
  FROM DUAL
    ) CP
  ON (UA.USA_EMAIL = CP.EMAIL_ADDRESS and UA.USA_ID  = CP.CUSTOMER_ID)
  WHEN MATCHED THEN
    UPDATE SET USA_SOURCE_CD = CP.SOURCE_CD,
    USA_EMPLOYEENBR=cp.EMPLOYEENBR,
    USA_CUSTOMER_TYPE=cp.CUSTOMERTYPE,
    RECENCY_DATE_TIME=cp.RECENCY_DATE_TIME,
    USA_PREFIX=cp.PREFIX,
    USA_FIRST_NM=cp.FIRSTNAME,
    USA_MIDDLE_NM=cp.MIDDLENAME,
    USA_LAST_NM=cp.LASTNAME,
    USA_GENDER=cp.GENDER,
    USA_DOB=CP.DOB,
    USA_PHONE_NUMBER=CP.PHONE_NUMBER,
    PREFERRRED_LANGUAGE=CP.PREFERRRED_LANGUAGE,
    REGISTERED_CUSTOMER=CP.REGISTERED_CUSTOMER,
    LOYALITY_NUMBER=CP.LOYALITY_NUMBER,
    BANNER_ID=CP.BANNER_ID,
    EMAIL_OPT_IND=CP.EMAIL_OPT_IND,
    USA_PRFRD_ADDR1=CP.USA_PRFRD_ADDR1,
    USA_PRFRD_ADDR2=CP.USA_PRFRD_ADDR2,
    USA_PRFRD_ADDR3=CP.USA_PRFRD_ADDR3,
    USA_PRFRD_CITY=CP.USA_PRFRD_CITY,
    USA_PRFRD_STATE=CP.USA_PRFRD_STATE,
    USA_PRFRD_COUNTRY=CP.USA_PRFRD_COUNTRY,
    USA_PRFRD_ZIPCODE=CP.USA_PRFRD_ZIPCODE,
    USA_PRFRD_ZIP4=CP.USA_PRFRD_ZIP4,
    DDW_MOD_TS=SYSDATE,
    MIGRATED_REC=CP.MIGRATED_REC
    ,
    USA_PRFRD_ADDR_FIRST_NAME=CP.USA_PRFRD_ADDR_FIRST_NAME
    ,
    USA_PRFRD_ADDR_LAST_NAME=CP.USA_PRFRD_ADDR_LAST_NAME,
    USA_PRFRD_ADDR_DEFAULT_TYPE=CP.USA_PRFRD_ADDR_DEFAULT_TYPE,
    USA_PRFRD_ADDR_MIDDLE_NAME=CP.USA_PRFRD_ADDR_MIDDLE_NAME,
    USA_PRFRD_ADDR_PHONE_NO=CP.USA_PRFRD_ADDR_PHONE_NO,
    USA_ADD_PRIOR_TYPE_CD=CP.USA_ADD_PRIOR_TYPE_CD
    ,USA_PRFRD_ADDR_ACTIVEIND=CP.USA_PRFRD_ADDR_ACTIVEIND
  WHEN NOT MATCHED THEN
    INSERT (USA_ID,USA_SOURCE_CD,USA_EMPLOYEENBR,USA_CUSTOMER_TYPE,RECENCY_DATE_TIME,USA_PREFIX,EMAIL_OPT_IND,
            USA_FIRST_NM,USA_MIDDLE_NM,USA_LAST_NM,USA_EMAIL,
            USA_GENDER,USA_DOB,USA_PHONE_NUMBER,PREFERRRED_LANGUAGE,REGISTERED_CUSTOMER,LOYALITY_NUMBER,BANNER_ID,UCID_MODIFY_DT,UCID_CREATE_DT,DDW_CRT_TS,USA_PRFRD_ADDR1,USA_PRFRD_ADDR2,USA_PRFRD_ADDR3,USA_PRFRD_CITY,USA_PRFRD_STATE,USA_PRFRD_ZIPCODE,USA_PRFRD_COUNTRY,USA_PRFRD_ZIP4,MIGRATED_REC
            ,
    USA_PRFRD_ADDR_FIRST_NAME,
    USA_PRFRD_ADDR_LAST_NAME,
    USA_PRFRD_ADDR_DEFAULT_TYPE,
    USA_PRFRD_ADDR_MIDDLE_NAME,
    USA_PRFRD_ADDR_PHONE_NO,
    USA_ADD_PRIOR_TYPE_CD
    ,USA_PRFRD_ADDR_ACTIVEIND
            )
    VALUES (CP.CUSTOMER_ID,CP.SOURCE_CD,CP.EMPLOYEENBR,CP.CUSTOMERTYPE,CP.RECENCY_DATE_TIME,CP.PREFIX,CP.EMAIL_OPT_IND,
       CP.FIRSTNAME,CP.MIDDLENAME,CP.LASTNAME,CP.EMAIL_ADDRESS,
       CP.GENDER,CP.DOB,CP.PHONE_NUMBER,CP.PREFERRRED_LANGUAGE,CP.REGISTERED_CUSTOMER,CP.LOYALITY_NUMBER,CP.BANNER_ID,CP.MODIFY_DT,CP.CREATE_DT,SYSDATE,CP.USA_PRFRD_ADDR1,CP.USA_PRFRD_ADDR2,CP.USA_PRFRD_ADDR3,CP.USA_PRFRD_CITY,CP.USA_PRFRD_STATE,CP.USA_PRFRD_ZIPCODE,CP.USA_PRFRD_COUNTRY,CP.USA_PRFRD_ZIP4,CP.MIGRATED_REC
       ,CP.USA_PRFRD_ADDR_FIRST_NAME,CP.USA_PRFRD_ADDR_LAST_NAME,CP.USA_PRFRD_ADDR_DEFAULT_TYPE
       ,CP.USA_PRFRD_ADDR_MIDDLE_NAME,CP.USA_PRFRD_ADDR_PHONE_NO,CP.USA_ADD_PRIOR_TYPE_CD
       ,CP.USA_PRFRD_ADDR_ACTIVEIND
       );
       COMMIT;
EXCEPTION
    WHEN ex_dml_errors THEN
      l_error_count := SQL%BULK_EXCEPTIONS.count;
      FOR i IN 1 .. l_error_count LOOP
      l_error_msg := SQLERRM(-SQL%BULK_EXCEPTIONS(i).ERROR_CODE);
      dbms_output.put_line('Error #' || i || ' at '|| 'iteration
      #' || SQL%BULK_EXCEPTIONS(i).ERROR_INDEX);
      dbms_output.put_line('Error message is ' ||
      SQLERRM(-SQL%BULK_EXCEPTIONS(i).ERROR_CODE));
      INSERT INTO  &1.USER_ACCOUNT_EXCEPTION
                     (
                     USA_EMAIL,
                     --USA_ID
                     ERROR_CNT, error_msg, exception_dt
                     )
              VALUES (
              v_coll_CUST_REC_TYPE(i).USA_UID,
              --SELECTION(i).CUSTOMER_ID,
              l_error_count,l_error_msg,LASTPROCESEDDATE
                     );
                     COMMIT;
   END LOOP;
END;
 EXIT WHEN C1%NOTFOUND;
                END LOOP;
COMMIT;
CLOSE c1;
END ;
/
declare
 I           INTEGER := 0;
   l_error_count  NUMBER;
  l_error_msg varchar2(2000);
  ex_dml_errors EXCEPTION;
  PRAGMA EXCEPTION_INIT(ex_dml_errors, -24381);
  LASTPROCESEDDATE DATE := SYSDATE;
CURSOR C1 IS
SElect
tua.usa_id,tua.USA_UID,tua.USA_CUST_NBR,tua.USA_LAST_LOGIN_DT,tua.USA_FIRST_NM,tua.USA_MIDDLE_NM,tua.USA_LAST_NM, obg.gndr,obdt.brth_dt,obrw.rwrd,tua.USA_EMPLOYEE_NBR,'Y' REG_CUSTOMER,4 banner_id,tuad.UAD_ADDR1,tuad.UAD_ADDR2,tuad.UAD_ADDR3,tuad.UAD_CITY,tuad.UAD_STATE_CD,tuad.UAD_PCODE,tuad.UAD_COUNTRY_CD
,NVL(tua.USA_CELL_PH,NVL(tua.USA_HOME_PH,tua.USA_BUS_PH)) PHONE_NUMBER ,tua.USA_SYS_TIMESTAMP, tua.USA_OPT_OUT
, tuad.UAD_CTC_FIRST_NM USA_PRFRD_ADDR_FIRST_NAME,tuad.UAD_CTC_LAST_NM USA_PRFRD_ADDR_LAST_NAME--, 'Y' USA_PRFRD_ADDR_DEFAULT_TYPE
, tuad.UAD_CTC_MIDDLE_NM USA_PRFRD_ADDR_MIDDLE_NAME,tuad.UAD_CTC_PH USA_PRFRD_ADDR_PHONE_NO
--,'B' USA_ADD_PRIOR_TYPE_CD
,tuad.UAD_STATUS_CD
from &1.USER_ACCOUT_WRK tua
INNER JOIN &1.USER_ADDRESS_WRK tuad  ON tua.USA_SHIP_TO_UAD_ID= tuad.uad_id
LEFT JOIN (select oba_atr_id,oba_obj_id,oba_str_val gndr from  &1.object_attr_cust_wrk obg ) obg
            ON obg.oba_obj_id=tua.usa_id
            AND  obg.oba_atr_id=6193548999262233
LEFT JOIN (select oba_atr_id,oba_obj_id,oba_dt_val brth_dt from  &1.object_attr_cust_wrk obg ) obdt
            ON obdt.oba_obj_id=tua.usa_id
            AND obdt.oba_atr_id=6193548999262291
LEFT JOIN (select oba_atr_id,oba_obj_id,oba_str_val rwrd from  &1.object_attr_cust_wrk obg ) obrw
            ON obrw.oba_obj_id=tua.usa_id
            AND  obrw.oba_atr_id=6193548999262640
where tua.usa_uid is not null
AND NOT EXISTS (SELECT 'X' FROM &1.USER_ACCOUNT bua where bua.usa_email=tua.usa_uid)
--and rownum<10
;
  TYPE CUST_REC_TYPE IS
        TABLE OF C1%rowtype;
         v_coll_CUST_REC_TYPE   CUST_REC_TYPE;
 BEGIN
    OPEN c1;
    LOOP
    FETCH c1  BULK COLLECT INTO v_coll_CUST_REC_TYPE limit 50000;
    BEGIN
     FORALL indx IN 1..v_coll_CUST_REC_TYPE.COUNT SAVE EXCEPTIONS
MERGE INTO &1.USER_ACCOUNT UA
  USING (
     SELECT v_coll_CUST_REC_TYPE(indx).usa_id CUSTOMER_ID, 'BM' SOURCE_CD, v_coll_CUST_REC_TYPE(indx).USA_EMPLOYEE_NBR EMPLOYEENBR,  'WEB' CUSTOMERTYPE
     , v_coll_CUST_REC_TYPE(indx).USA_LAST_LOGIN_DT RECENCY_DATE_TIME, NULL PREFIX,
     v_coll_CUST_REC_TYPE(indx).USA_OPT_OUT EMAIL_OPT_IND,
        v_coll_CUST_REC_TYPE(indx).USA_FIRST_NM FIRSTNAME,v_coll_CUST_REC_TYPE(indx).USA_MIDDLE_NM MIDDLENAME,
        v_coll_CUST_REC_TYPE(indx).USA_LAST_NM LASTNAME,upper(v_coll_CUST_REC_TYPE(indx).USA_UID) EMAIL_ADDRESS,
       v_coll_CUST_REC_TYPE(indx).gndr GENDER,v_coll_CUST_REC_TYPE(indx).brth_dt DOB,
       v_coll_CUST_REC_TYPE(indx).PHONE_NUMBER PHONE_NUMBER,NULL PREFERRRED_LANGUAGE,v_coll_CUST_REC_TYPE(indx).REG_CUSTOMER REGISTERED_CUSTOMER,v_coll_CUST_REC_TYPE(indx).rwrd LOYALITY_NUMBER,v_coll_CUST_REC_TYPE(indx).banner_id BANNER_ID--ADDR1,ADDR2,ADDR3,CITY,STATE,ZIPCODE,
      , NULL CREATE_DT,v_coll_CUST_REC_TYPE(indx).USA_SYS_TIMESTAMP MODIFY_DT,
      v_coll_CUST_REC_TYPE(indx).UAD_ADDR1 USA_PRFRD_ADDR1,
      v_coll_CUST_REC_TYPE(indx).UAD_ADDR2  USA_PRFRD_ADDR2,
    v_coll_CUST_REC_TYPE(indx).UAD_ADDR3  USA_PRFRD_ADDR3,
    v_coll_CUST_REC_TYPE(indx).UAD_CITY USA_PRFRD_CITY,
    v_coll_CUST_REC_TYPE(indx).UAD_STATE_CD USA_PRFRD_STATE,
    v_coll_CUST_REC_TYPE(indx).UAD_COUNTRY_CD USA_PRFRD_COUNTRY,
    v_coll_CUST_REC_TYPE(indx).UAD_PCODE USA_PRFRD_ZIPCODE,
    NULL USA_PRFRD_ZIP4,
    'Y' MIGRATED_REC  ,
      v_coll_CUST_REC_TYPE(indx).USA_PRFRD_ADDR_FIRST_NAME USA_PRFRD_ADDR_FIRST_NAME,
        v_coll_CUST_REC_TYPE(indx).USA_PRFRD_ADDR_LAST_NAME USA_PRFRD_ADDR_LAST_NAME,
          'Y' USA_PRFRD_ADDR_DEFAULT_TYPE,
          v_coll_CUST_REC_TYPE(indx).USA_PRFRD_ADDR_MIDDLE_NAME USA_PRFRD_ADDR_MIDDLE_NAME,
     v_coll_CUST_REC_TYPE(indx).USA_PRFRD_ADDR_PHONE_NO USA_PRFRD_ADDR_PHONE_NO,
       'B' USA_ADD_PRIOR_TYPE_CD,
        CASE WHEN v_coll_CUST_REC_TYPE(indx).UAD_STATUS_CD ='ENB' THEN 'A' ELSE NULL END USA_PRFRD_ADDR_ACTIVEIND
  FROM DUAL
    ) CP
  ON (UA.USA_EMAIL = CP.EMAIL_ADDRESS and UA.USA_ID  = CP.CUSTOMER_ID)
  WHEN MATCHED THEN
    UPDATE SET USA_SOURCE_CD = CP.SOURCE_CD,
    USA_EMPLOYEENBR=cp.EMPLOYEENBR,
    USA_CUSTOMER_TYPE=cp.CUSTOMERTYPE,
    RECENCY_DATE_TIME=cp.RECENCY_DATE_TIME,
    USA_PREFIX=cp.PREFIX,
    USA_FIRST_NM=cp.FIRSTNAME,
    USA_MIDDLE_NM=cp.MIDDLENAME,
    USA_LAST_NM=cp.LASTNAME,
    USA_GENDER=cp.GENDER,
    USA_DOB=CP.DOB,
    USA_PHONE_NUMBER=CP.PHONE_NUMBER,
    PREFERRRED_LANGUAGE=CP.PREFERRRED_LANGUAGE,
    REGISTERED_CUSTOMER=CP.REGISTERED_CUSTOMER,
    LOYALITY_NUMBER=CP.LOYALITY_NUMBER,
    BANNER_ID=CP.BANNER_ID,
    EMAIL_OPT_IND=CP.EMAIL_OPT_IND,
    USA_PRFRD_ADDR1=CP.USA_PRFRD_ADDR1,
    USA_PRFRD_ADDR2=CP.USA_PRFRD_ADDR2,
    USA_PRFRD_ADDR3=CP.USA_PRFRD_ADDR3,
    USA_PRFRD_CITY=CP.USA_PRFRD_CITY,
    USA_PRFRD_STATE=CP.USA_PRFRD_STATE,
    USA_PRFRD_COUNTRY=CP.USA_PRFRD_COUNTRY,
    USA_PRFRD_ZIPCODE=CP.USA_PRFRD_ZIPCODE,
    USA_PRFRD_ZIP4=CP.USA_PRFRD_ZIP4,
    DDW_MOD_TS=SYSDATE,
    MIGRATED_REC=CP.MIGRATED_REC,
    USA_PRFRD_ADDR_FIRST_NAME=CP.USA_PRFRD_ADDR_FIRST_NAME
    ,
    USA_PRFRD_ADDR_LAST_NAME=CP.USA_PRFRD_ADDR_LAST_NAME,
    USA_PRFRD_ADDR_DEFAULT_TYPE=CP.USA_PRFRD_ADDR_DEFAULT_TYPE,
    USA_PRFRD_ADDR_MIDDLE_NAME=CP.USA_PRFRD_ADDR_MIDDLE_NAME,
    USA_PRFRD_ADDR_PHONE_NO=CP.USA_PRFRD_ADDR_PHONE_NO,
    USA_ADD_PRIOR_TYPE_CD=CP.USA_ADD_PRIOR_TYPE_CD
    ,USA_PRFRD_ADDR_ACTIVEIND=CP.USA_PRFRD_ADDR_ACTIVEIND
  WHEN NOT MATCHED THEN
    INSERT (USA_ID,USA_SOURCE_CD,USA_EMPLOYEENBR,USA_CUSTOMER_TYPE,RECENCY_DATE_TIME,USA_PREFIX,EMAIL_OPT_IND,
            USA_FIRST_NM,USA_MIDDLE_NM,USA_LAST_NM,USA_EMAIL,
            USA_GENDER,USA_DOB,USA_PHONE_NUMBER,PREFERRRED_LANGUAGE,REGISTERED_CUSTOMER,LOYALITY_NUMBER,BANNER_ID,UCID_MODIFY_DT,UCID_CREATE_DT,DDW_CRT_TS,USA_PRFRD_ADDR1,USA_PRFRD_ADDR2,USA_PRFRD_ADDR3,USA_PRFRD_CITY,USA_PRFRD_STATE,USA_PRFRD_ZIPCODE,USA_PRFRD_COUNTRY,USA_PRFRD_ZIP4,MIGRATED_REC
              ,
    USA_PRFRD_ADDR_FIRST_NAME,
    USA_PRFRD_ADDR_LAST_NAME,
    USA_PRFRD_ADDR_DEFAULT_TYPE,
    USA_PRFRD_ADDR_MIDDLE_NAME,
    USA_PRFRD_ADDR_PHONE_NO,
    USA_ADD_PRIOR_TYPE_CD
    ,USA_PRFRD_ADDR_ACTIVEIND
            )
    VALUES (CP.CUSTOMER_ID,CP.SOURCE_CD,CP.EMPLOYEENBR,CP.CUSTOMERTYPE,CP.RECENCY_DATE_TIME,CP.PREFIX,CP.EMAIL_OPT_IND,
       CP.FIRSTNAME,CP.MIDDLENAME,CP.LASTNAME,CP.EMAIL_ADDRESS,
       CP.GENDER,CP.DOB,CP.PHONE_NUMBER,CP.PREFERRRED_LANGUAGE,CP.REGISTERED_CUSTOMER,CP.LOYALITY_NUMBER,CP.BANNER_ID,CP.MODIFY_DT,CP.CREATE_DT,SYSDATE,CP.USA_PRFRD_ADDR1,CP.USA_PRFRD_ADDR2,CP.USA_PRFRD_ADDR3,CP.USA_PRFRD_CITY,CP.USA_PRFRD_STATE,CP.USA_PRFRD_ZIPCODE,CP.USA_PRFRD_COUNTRY,CP.USA_PRFRD_ZIP4,CP.MIGRATED_REC
          ,CP.USA_PRFRD_ADDR_FIRST_NAME,CP.USA_PRFRD_ADDR_LAST_NAME,CP.USA_PRFRD_ADDR_DEFAULT_TYPE
       ,CP.USA_PRFRD_ADDR_MIDDLE_NAME,CP.USA_PRFRD_ADDR_PHONE_NO,CP.USA_ADD_PRIOR_TYPE_CD
       ,CP.USA_PRFRD_ADDR_ACTIVEIND
       );
       COMMIT;
EXCEPTION
    WHEN ex_dml_errors THEN
      l_error_count := SQL%BULK_EXCEPTIONS.count;
      FOR i IN 1 .. l_error_count LOOP
      l_error_msg := SQLERRM(-SQL%BULK_EXCEPTIONS(i).ERROR_CODE);
      dbms_output.put_line('Error #' || i || ' at '|| 'iteration
      #' || SQL%BULK_EXCEPTIONS(i).ERROR_INDEX);
      dbms_output.put_line('Error message is ' ||
      SQLERRM(-SQL%BULK_EXCEPTIONS(i).ERROR_CODE));
      INSERT INTO  &1.USER_ACCOUNT_EXCEPTION
                     (
                     USA_EMAIL,
                     --USA_ID
                     ERROR_CNT, error_msg, exception_dt
                     )
              VALUES (
              v_coll_CUST_REC_TYPE(i).USA_UID,
              --SELECTION(i).CUSTOMER_ID,
              l_error_count,l_error_msg,LASTPROCESEDDATE
                     );
                     COMMIT;
   END LOOP;
END;
 EXIT WHEN C1%NOTFOUND;

         END LOOP;
COMMIT;
CLOSE c1;
END ;
/
EXIT
